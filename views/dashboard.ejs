<!DOCTYPE html>
<html>

<head>
    <title>Reports Dashboard</title>
    <meta charset="UTF-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous" />
    <style>
        form {
            padding: 1rem;
        }

        label {
            display: block;
            margin-top: 1rem;
            font-weight: bold;
        }

        .row {
            display: flex;
            gap: 1rem;
        }

        .row>div {
            flex: 1;
        }

        input,
        select {
            width: 100%;
            padding: 0.5rem;
        }
    </style>
</head>

<body>
    <div class="container">

        <div style="height:3rem"></div>

        <div class="card">
            <div class="card-header">
                <h1>Credentials</h1>
            </div>
            <div class="card-body">
                <% if (!credentials || !credentials.reportsUrl) { %>
                    <div>
                        If you have a Master Vonage API Key and Secret, you can securely store them here.
                        Theyâ€™ll remain private and accessible only to users working with this interface.
                    </div>
                    <form action="/credentials" method="POST">
                        <label>API Key</label>
                        <input type="text" name="apiKey" required>

                        <label>API Secret</label>
                        <input type="text" name="apiSecret" required>

                        <label>Reports URL</label>
                        <input type="text" name="reportsUrl" required>
                        
                        <div class="text-center mt-3">
                            <input type="submit" value="Store Credentials" class="btn btn-primary">
                        </div>
                    </form>
                <% } else { %>
                    <div class="d-flex justify-content-center align-items-center gap-2">
                        <div class="alert alert-success m-0" role="alert">
                            Your credentials are stored and ready to use to generate reports.
                        </div>
                        <div>
                            <a href="/delete-credentials" class="btn btn-danger">
                                Delete
                            </a>
                        </div>
                    </div>
                    <div class="mt-2 text-center">
                        Reports URL: <%= credentials?.reportsUrl %>
                    </div>
                    <div class="mt-2 text-center">
                        Logged as: <%= user?.email %>                    
                        <% if (user?.email === adminEmail) { %>
                            <div class="mt-2">
                                <a href="/new-user" class="btn btn-success">Create User</a>
                            </div>
                        <% } %>
                    </div>
                <% } %>
            </div>
        </div>

        <% if (credentials) { %>
            
            <div style="height:3rem"></div>

            <h1>Reports Dashboard</h1>
            <p>
                Generate a Pivot Table with charts and summary by entering
                your parameters manually.
            </p>
            <form class="border shadow-sm" action="/submit-json-report" method="POST" enctype="multipart/form-data">
                <label>Account ID</label>
                <small>Enter to ApiKey containing the data for this report</small>
                <input type="text" name="accountId" required>

                <div class="row">
                    <div>
                        <label>Start Date</label>
                        <small>Starting date for this report (it must be less than 13 months)</small>
                        <input type="date" name="startDate" required>
                    </div>
                    <div>
                        <label>End Date</label>
                        <small>Ending date for this report</small>
                        <input type="date" name="endDate" required>
                    </div>
                </div>

                <label>Email To</label>
                <small>We will send a link with the resulting report to this Email. You can use comma to enter multiple Email addresses.</small>
                <input type="text" name="emailTo" required>

                <label>Product</label>
                <small>Select if you want to see Vonage's SMS, MESSAGES API, etc</small>
                <select name="product">
                    <option value="MESSAGES">MESSAGES</option>
                    <option value="SMS">SMS</option>
                    <option value="VOICE-CALL">VOICE-CALL</option>
                    <option value="VOICE-FAILED">VOICE-FAILED</option>
                    <option value="IN-APP-VOICE">IN-APP-VOICE</option>
                    <option value="WEBSOCKET-CALL">WEBSOCKET-CALL</option>
                    <option value="VERIFY-API">VERIFY-API</option>
                    <option value="VERIFY-V2">VERIFY-V2</option>
                    <option value="NUMBER-INSIGHT">NUMBER-INSIGHT</option>
                    <option value="NUMBER-INSIGHT-V2">NUMBER-INSIGHT-V2</option>
                    <option value="ASR">ASR</option>
                    <option value="CONVERSATION-MESSAGE">CONVERSATION-MESSAGE</option>
                    <option value="CONVERSATION-EVENT">CONVERSATION-EVENT</option>
                    <option value="REPORTS-USAGE">REPORTS-USAGE</option>
                    <option value="MEETINGS">MEETINGS</option>
                    <option value="AMD">AMD</option>
                    <option value="SMS-TRAFFIC-CONTROL">SMS-TRAFFIC-CONTROL</option>                    
                </select>

                <label>Direction</label>
                <select name="direction">
                    <option value="outbound">Outbound</option>
                    <option value="inbound">Inbound</option>
                </select>

                <label>Include Subaccounts?</label>
                <small>If the ApiKey specified contains sub-ApiKeys, then you can generate the report for the master and its
                    childs</small>
                <select name="include_subaccounts">
                    <option value="false" selected>No</option>
                    <option value="true">Yes</option>
                </select>

                <label>Include Messages?</label>
                <small>Select if you want to see in the report the full SMS message</small>
                <select name="include_messages">
                    <option value="false">No</option>
                    <option value="true" selected>Yes</option>
                </select>

                <div class="mt-3 card">
                    <div class="card-header">
                        <h5>Group By</h5>
                    </div>
                    <div class="card-body">
                        <label class="p-0">Group By Fields (comma-separated)</label>
                        <small>Enter the name of the columns you want to see in your pivot table</small>
                        <input type="text" name="groupByFields"
                            value="date_received,country_name,message_body,status,error_code">

                        <label>Group Name</label>
                        <small>Add any name for this grouping</small>
                        <input type="text" name="groupByName"
                            value="Grouped by Date, country, message, status and error code">
                    </div>
                </div>

                <div class="mt-3 card">
                    <div class="card-header">
                        <h5>Aggregations</h5>
                    </div>
                    <div class="card-body" id="aggregations-container">
                        <p>Define one or more aggregations to summarize the grouped data.</p>
                        <p>Available types: <code>sum</code>, <code>count</code>, <code>countDistinct</code>,
                            <code>avg</code>
                        </p>

                        <div class="aggregation-group mb-3 border p-3 rounded">
                            <label>Type</label>
                            <select name="aggregationType[]" required>
                                <option value="count">count</option>
                                <option value="sum">sum</option>
                                <option value="countDistinct">countDistinct</option>
                                <option value="avg">avg</option>
                            </select>

                            <label>Field</label>
                            <input type="text" name="aggregationField[]" placeholder="e.g., id or latency" required>

                            <label>Label</label>
                            <input type="text" name="aggregationLabel[]" placeholder="e.g., Total Messages" required>
                        </div>
                    </div>

                    <div class="card-footer text-center">
                        <button type="button" class="btn btn-outline-primary" onclick="addAggregation()">+ Add Another
                            Aggregation</button>
                    </div>
                </div>

                <% if (showUploadFile) { %>

                    <div class="mt-3 card">
                        <div class="card-header">
                            <h3>Upload a CSV File</h3>
                        </div>
                        <div class="card-body">
                            <p>
                                If you already have a CSV file downloaded
                                from Vonage's Reports API, then you can
                                upload it from here
                            </p>
                            <input type="file" name="file" accept=".csv">
                        </div>
                    </div>

                <% } %>

                <div class="card mt-3">
                    <div class="card-header">
                        <h5>Repeat</h5>
                    </div>
                    <div class="card-body">
                        <p>
                            If you want to schedule this report creation, you
                            can specify a time and date(s)
                        </p>
                        <p>
                            This doesn't work if you are uploading a CSV file
                        </p>
                        <label>Send At (Time, 24h format: HH:mm)</label>
                        <input type="time" name="cron_time">

                        <label>Repeat on Days:</label>
                        <div class="mt-3 row">
                            <% ['mon','tue','wed','thu','fri','sat','sun'].forEach(day=> { %>
                                <div class="d-flex justify-content-center align-items-center gap-2">
                                    <input type="checkbox" name="cronDays" value="<%= day %>" style="width:30px">
                                    <%= day.toUpperCase() %>
                                </div>
                                <% }) %>
                        </div>
                    </div>
                </div>
                <div class="mt-3">
                    <input type="submit" value="Generate Report">
                </div>
            </form>

            <!-- LIST OF CRONS -->
            <div class="card mt-3">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="m-0">Active Crons</h5>
                    <button type="button" class="btn btn-sm btn-outline-secondary" onclick="getCronList()">Refresh</button>
                </div>
                <div class="card-body" id="cron-container">
                    <div class="text-muted">Loading active crons...</div>
                </div>
            </div>      

        <% } %>

        <div style="height:3rem"></div>

    </div>

    <script>
        // Base URL from your stored creds
        const REPORTS_URL = '<%= credentials?.reportsUrl %>';

        function addAggregation() {
            const container = document.getElementById('aggregations-container');
            const group = document.createElement('div');
            group.className = 'aggregation-group mb-3 border p-3 rounded';
            group.innerHTML = `
                <label>Type</label>
                <select name="aggregationType[]" required>
                    <option value="count">count</option>
                    <option value="sum">sum</option>
                    <option value="countDistinct">countDistinct</option>
                    <option value="avg">avg</option>
                </select>
        
                <label>Field</label>
                <input type="text" name="aggregationField[]" placeholder="e.g., id or latency" required>
        
                <label>Label</label>
                <input type="text" name="aggregationLabel[]" placeholder="e.g., Total Messages" required>
            `;
            container.appendChild(group);
        }

        document.addEventListener('DOMContentLoaded', () => {
            getCronList();
        });

        async function getCronList() {
            const container = document.getElementById('cron-container');
            container.innerHTML = '<div class="text-muted">Loading active crons...</div>';

            try {
            const res = await fetch('/crons/list', { headers: { 'Accept': 'application/json' } });
            if (!res.ok) throw new Error(`HTTP ${res.status}`);
            const data = await res.json();

            if (!data.jobs || data.jobs.length === 0) {
                container.innerHTML = '<div class="text-muted">No active crons.</div>';
                return;
            }

            const rows = data.jobs.map(job => {
                const daysActive = ['mon','tue','wed','thu','fri','sat','sun']
                .filter(day => job[day])
                .map(day => day.toUpperCase())
                .join(', ') || '(none)';

                return `
                <tr>
                    <td><code>${job.cronId}</code></td>
                    <td>${job.startAt || ''}</td>
                    <td>${daysActive}</td>
                    <td class="text-end">
                    <button class="btn btn-sm btn-danger" onclick="terminateCron('${job.cronId}')">
                        Terminate
                    </button>
                    </td>
                </tr>
                `;
            }).join('');

            container.innerHTML = `
                <div class="mb-2 small text-muted">Total: ${data.count}</div>
                <div class="table-responsive">
                <table class="table table-sm align-middle">
                    <thead>
                    <tr>
                        <th>Cron ID</th>
                        <th>Start At</th>
                        <th>Days Active</th>
                        <th class="text-end">Actions</th>
                    </tr>
                    </thead>
                    <tbody>${rows}</tbody>
                </table>
                </div>
            `;
            } catch (err) {
            container.innerHTML = `<div class="alert alert-danger">Error loading crons: ${err.message}</div>`;
            }
        }
        
        async function terminateCron(cronId) {
            if (!confirm(`Terminate cron ${cronId}?`)) return;

            try {
            const res = await fetch('/crons/cancel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },
                body: JSON.stringify({ cronId })
            });
            const result = await res.json();
            alert(result.message || 'Done');
            getCronList(); // refresh after cancel
            } catch (err) {
            alert('Error cancelling cron: ' + err.message);
            }
        }        
    </script>

</body>

</html>